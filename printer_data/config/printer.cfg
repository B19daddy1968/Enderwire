[virtual_sdcard]
on_error_gcode: CANCEL_PRINT

[mcu CB2]
serial: /tmp/klipper_host_mcu

[mcu]
serial:  /dev/serial/by-id/usb-Klipper_stm32g0b1xx_420017000C504B5735313920-if00
# canbus_uuid: fd86fce10f39

[mcu EBB]
serial: /dev/serial/by-id/usb-Klipper_rp2040_504434031074C11C-if00
# canbus_uuid: 8d2794806816

[mcu eddy]
serial: /dev/serial/by-id/usb-Klipper_rp2040_504434031089DE1C-if00

# [printer]
# kinematics: corexz               # kinematics: cartesian
# max_velocity: 300                   # max_velocity: 300
# max_accel: 3000                     # max_accel: 3000
# max_z_velocity: 20                  # max_z_velocity: 5
# max_z_accel: 1000                   # max_z_accel: 100
# square_corner_velocity: 4.0

[printer]
kinematics: corexz
max_velocity: 200
max_accel: 2000
max_z_velocity: 50
max_z_accel: 1000
square_corner_velocity: 4.0

[idle_timeout]
#gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 3600

[force_move]
enable_force_move: True

# Enable arcs support
[gcode_arcs]
#resolution: 0.1
resolution: 1.0

#[include shell_command.cfg]

[include macros.cfg]

[include mainsail1.cfg]

[exclude_object]

# [include Addons/eddy.cfg]

# [include Addons/KAMP_Settings.cfg]

[include Addons/Knomi.cfg]

[include Addons/input_shaper.cfg]

# [include Addons/klicky-probe.cfg]

# [include Addons/Stealthburner_Led_Effects.cfg]

[include Addons/stealthburner_leds.cfg]

#[include Knomi.cfg]

# embedded temperature sensor

#########################################################
#                 Temp Sensors
##########################################################

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBB:gpio27

[temperature_sensor CB2]
sensor_type: temperature_host
min_temp: 2
max_temp: 100

[temperature_sensor MANTA_E3EZ]
sensor_type: temperature_mcu
min_temp: 2
max_temp: 100

[temperature_sensor chamber]
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA4
#sensor_mcu: rpi
#serial_no: 28-01191f2eaf2f     ; you MUST use your own ID here

#####################################################################
# 	X Stepper Settings
#####################################################################

######
# Motor -XM
# Endstop - X-STOP
###############
[stepper_x]
step_pin: PA14
dir_pin: PA10
enable_pin: !PA13
rotation_distance: 40
homing_speed: 70
full_steps_per_rotation: 200
microsteps: 64
endstop_pin: EBB:gpio13                                                                                                               #tmc2209_stepper_x:virtual_endstop     #^PC0
#homing_retract_dist: 0
position_endstop: 215
position_min: 0
position_max: 215
homing_speed: 70
#homing_positive_dir: True


[tmc2209 stepper_x]
uart_pin: PB8
diag_pin: PC4        # Set to MCU pin connected to TMC DIAG pin
run_current: 0.5
interpolate: false
#stealthchop_threshold: 999999
#driver_SGTHRS: 150
driver_TBL: 2
driver_TOFF: 2
driver_HEND: 1
driver_HSTRT: 4
driver_PWM_LIM: 8
driver_PWM_GRAD: 8
driver_PWM_FREQ: 1
driver_PWM_REG: 4

#####################################################################
#   Y Stepper Settings
#####################################################################

######
# Motor -YM
# Endstop - Y-STOP
###############
[stepper_y]
step_pin: PC8
dir_pin: PA15
enable_pin: !PC14
rotation_distance: 40
full_steps_per_rotation: 200
microsteps: 64
#endstop_pin: ^PC1 
endstop_pin: PB0                                                       #tmc2209_stepper_y:virtual_endstop
homing_retract_dist: 0                                                 # Uncomment this line too
position_endstop: 0
position_min: 0
position_max: 230
homing_speed: 70
homing_positive_dir: false

[tmc2209 stepper_y]
uart_pin: PC9
diag_pin: PB0
run_current: 0.6
interpolate: false
#stealthchop_threshold: 999999
driver_TBL: 2
driver_TOFF: 2
driver_HEND: 1
driver_HSTRT: 4
driver_PWM_LIM: 8
driver_PWM_GRAD: 8
driver_PWM_FREQ: 1
driver_PWM_REG: 4

#####################################################################
# 	Z Stepper Settings
#####################################################################

######
# Motor -ZAM
# Endstop - Z-STOP
###############
[stepper_z]
step_pin: PD2
dir_pin: !PD4
enable_pin: !PD3
rotation_distance: 40
full_steps_per_rotation: 200
microsteps: 64
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0
position_max: 250
homing_speed: 15
second_homing_speed: 3
position_min: -10.0

[tmc2209 stepper_z]
uart_pin: PD0
diag_pin: PC6
run_current: 0.5
interpolate: False
#stealthchop_threshold: 999999
driver_TBL: 2
driver_TOFF: 2
driver_HEND: 1
driver_HSTRT: 4
driver_PWM_LIM: 8
driver_PWM_GRAD: 8
driver_PWM_FREQ: 1
driver_PWM_REG: 4

##################################################
                # extruder
##################################################

[extruder]
step_pin: EBB:gpio18                              #EBBCan:gpio18                                    # step_pin: PD5
dir_pin:  !EBB:gpio19                             #EBBCan:gpio19                                     # dir_pin: !PD6
enable_pin: !EBB:gpio17                           #!EBBCan:gpio17                                 # enable_pin: !PB3
heater_pin: EBB:gpio7                             #EBBCan:gpio7                                   # heater_pin: PB11 #HE0
min_temp: 0
max_temp: 300 
rotation_distance:  46.617                                  #47.088 
gear_ratio: 9:1
microsteps: 16
# rotation_distance:  22.720                                #21.63786                              
# gear_ratio: 50:10                                         #gear_ratio: 50:17
# microsteps: 32                                            #microsteps: 16
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.75
#sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBB:gpio26
pullup_resistor: 2200 # 2.2K
sensor_type: PT1000            #Generic 3950                #EPCOS 100K B57560G104F           
# sensor_pin: EBBCan:gpio27 #TH0
# sensor_type: MAX31865                # Temperature sensor type
# sensor_pin:  EBB:gpio26              #EBBCan:gpio9             # Sensor pin     #EBB:gpio9
# spi_software_sclk_pin: EBBCan:gpio10 # SPI clock pin
# spi_software_mosi_pin: EBBCan:gpio8  # SPI master out slave in pin
# spi_software_miso_pin: EBBCan:gpio11 # SPI master in slave out pin
# sensor_type: MAX31865
# sensor_pin: EBB:gpio9
# spi_bus: spi1a
# rtd_nominal_r: 100                   # RTD nominal resistance
# rtd_reference_r: 430                 # RTD reference resistance
# rtd_num_of_wires: 2
# rtd_use_50Hz_filter: True
#pressure_advance: 0.04
max_power: 1.0
min_extrude_temp: 0
max_extrude_cross_section: 5
max_extrude_only_distance: 500.0
max_extrude_only_velocity: 100
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982



# [firmware_retraction]
# retract_length:0.5
# retract_speed: 120
# unretract_speed: 120

[tmc2209 extruder]
uart_pin: EBB:gpio20                                     #PD1
run_current: 0.6
hold_current: 0.3
interpolate: False
stealthchop_threshold: 999999

#######################################################
#                    Eddy
#######################################################

# The MCU section only applies to the Eddy USB. For Eddy Coil you will use the MCU name of the toolboard that you connected the Eddy Coil to.
# [mcu eddy]
# serial: /dev/serial/by-id/usb-Klipper_rp2040_eddy-if00 # This is the serial address of your eddy probe. This can be found by using the terminal of your klipper instance (typically through SSH) and using the command ```ls /dev/serial/by-id``` 
# restart_method: command
#Did you read all of the comments before the macros? Make sure that you do and then uncomment the ones that you need. Remove this line when you are done.

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu # Sets the type of sensor for Klipper to read
sensor_mcu: eddy # Sets the MCU of the eddy probe tempereature sensor
min_temp: 10 # Sets the minimum tempereature for eddys tempereature sensor to operate
max_temp: 100 # Sets the maximum tempereature for eddys tempereature sensor to operate

[probe_eddy_current btt_eddy]
sensor_type: ldc1612
z_offset: 2.5
#i2c_address:
i2c_mcu: eddy  # This value is good for the Eddy USB but would need to be adjusted for the Eddy Coil according to the MCU you have used.
i2c_bus: i2c0f # This value is good for the Eddy USB but would need to be adjusted for the Eddy Coil according to the I2C bus you have used.
# Measure the offsets below using the method described here: https://www.klipper3d.org/Probe_Calibrate.html#calibrating-probe-x-and-y-offsets
# For a standard Voron stealthburner X carriage mount there should be no need to change the defaults below.
x_offset: 0
y_offset: 21.42

# This section is only relevant for Eddy USB. Comment it out for Eddy Coil.
[temperature_probe btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26
horizontal_move_z: 2

[bed_mesh]
horizontal_move_z: 2
speed: 200
# For the mesh dimensions below, the coordinates need to be reachable by the center of the probe. To calculate coordinates that will work, use the formula below:
# mesh x min = position_min_x + greater_of (15mm or x_offset) <--- in this term, only consider the x offset if it is positive, ignore if negative.
# mesh y min = position_min_y + greater_of (15mm or y_offset) <--- in this term, only consider the y offset if it is positive, ignore if negative.
# mesh x max = position_max_x - greater_of (15mm or |x_offset|) <--- in this term, only consider the x offset if it is negative, ignore if positive.
# mesh y max = position_max_y - greater_of (15mm or |y_offset|) <--- in this term, only consider the y offset if it is negative, ignore if positive.
# Example: Consider that you have a 300 x 300 bed with the max x and y positions being 300 and the min being 0. Your probe offsets are -20 for X and 10 for Y
# For mesh x min we ignore the x offset term because it is negative. Therefore mesh x min = 15
# For mesh y min we do not ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y min = 15
# For mesh x max we do not ignore the x offset term because it is negative. It is also greater than 15. Therefore mesh x max = 280
# For mesh y max we ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y max = 285
# The final result would be mesh_min: 15, 15 mesh_max: 280, 285
mesh_min: 5,25
mesh_max: 210.0,220 # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
probe_count: 9, 9
algorithm: bicubic
#scan_overshoot: 8  #uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.

# Uncomment this if you are using Eddy as the probe AND the homing endstop
[safe_z_home]
home_xy_position: 110.50,117.50 # Choose an X,Y position that is in the center of your bed. For a 300x300 machine that will be 150, 150. Use the same principle to calculate your bed center.
z_hop: 10
z_hop_speed: 25
speed: 200

###############################Macros and related################################
#This secton contains macros and related config sections. Some should be used, others are optional. Read the comment above each one to find out whether or not to uncomment it for your installation.


# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
#[save_variables]
#filename: ~/printer_data/config/variables.cfg



# Uncomment this if you are using Eddy as the probe AND the homing endstop
[force_move]
enable_force_move: True # Allows a user to move the z axis down if they have no other means of homing Z and need to calibrate the Eddy.



# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
#[delayed_gcode RESTORE_PROBE_OFFSET]
#initial_duration: 1.
#gcode:
#  {% set svv = printer.save_variables.variables %}
#  {% if not printer["gcode_macro SET_GCODE_OFFSET"].restored %}
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ svv.nvm_offset|default(0) }
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=restored VALUE=True
#  {% endif %}



# Uncomment this if you are using Eddy as the probe AND the homing endstop
# Take note of the lines that should only be used if you have a KNOMI installed.
[gcode_macro G28]
rename_existing: G28.1
gcode:
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg
  G28.1 {rawparams}
  {% if not rawparams or (rawparams and 'Z' in rawparams) %}
    PROBE
    SET_Z_FROM_PROBE
  {% endif %}
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg



# Uncomment this if you are using Eddy as the probe AND the homing endstop
[gcode_macro SET_Z_FROM_PROBE]
gcode:
    {% set cf = printer.configfile.settings %}
    SET_GCODE_OFFSET_ORIG Z={printer.probe.last_z_result - cf['probe_eddy_current btt_eddy'].z_offset + printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset}
    G90
    G1 Z{cf.safe_z_home.z_hop}


# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro Z_OFFSET_APPLY_PROBE]
rename_existing: Z_OFFSET_APPLY_PROBE_ORIG
gcode:
 SAVE_VARIABLE VARIABLE=nvm_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset }



# Uncomment the lines in this macro if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro SET_GCODE_OFFSET]
rename_existing: SET_GCODE_OFFSET_ORIG
variable_restored: False  # Mark whether the var has been restored from NVM
variable_runtime_offset: 0
gcode:
#  {% if params.Z_ADJUST %}
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset + params.Z_ADJUST|float }
#  {% endif %}
#  {% if params.Z %}
#    {% set paramList = rawparams.split() %}
#    {% for i in range(paramList|length) %}
#      {% if paramList[i]=="Z=0" %}
#        {% set temp=paramList.pop(i) %}
#        {% set temp="Z_ADJUST=" + (-printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset)|string %}
#        {% if paramList.append(temp) %}{% endif %}
#      {% endif %}
#    {% endfor %}
#    {% set rawparams=paramList|join(' ') %}
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE=0
#  {% endif %}
  SET_GCODE_OFFSET_ORIG { rawparams }



# This macro automates a lot of the frequency mapping process and simplifies the steps significantly.
[gcode_macro PROBE_EDDY_CURRENT_CALIBRATE_AUTO]
gcode:
  BED_MESH_CLEAR
  G28 X Y
  G90 # Abs positioning
  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # Allows the user to work it down until it touches.
  {% endif %}
  PROBE_EDDY_CURRENT_CALIBRATE {rawparams}



#This macro is optional but useful if you want to run a rapid scan before each print. Simply uncomment it and add BED_MESH_SCAN to your print start code.
#[gcode_macro BED_MESH_CALIBRATE]
#rename_existing: BTT_BED_MESH_CALIBRATE
#gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
#  BTT_BED_MESH_CALIBRATE METHOD=rapid_scan
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg


#######################################################
                   # probe
#######################################################

# [probe]
# #pin:  EBB:gpio20                                       #^EBBCan:gpio6
# #control_pin: PA1
# x_offset: 0
# y_offset: 23
#z_offset: 6.17
# speed: 20
# lift_speed: 10
# samples: 2
# samples_result: median
# sample_retract_dist: 2
# samples_tolerance: 0.01
# samples_tolerance_retries: 10
#z_offset: 0.0                             #64 microsteps #5.860  #smooth pei  #5.870 #textured pei
# x_offset: 0
# y_offset: -22
# speed: 8
# samples: 2
# sample_retract_dist: 6.0
# samples_result:  median
# samples_tolerance: 0.100
# samples_tolerance_retries: 3
# #z_offset: 0.0                              #1.635

############################################################
               # Klicky Probe
############################################################

# [servo klicky_servo]
# #check were your servo is wired
# pin:  PA7                                                        #EBBCan:gpio22
# maximum_servo_angle: 180
# minimum_pulse_width: 0.00025
# maximum_pulse_width: 0.0024

# [gcode_macro _servo_test_angle]
# gcode:
# 	{% set ANGLE  = params.ANGLE|int %}
	
#     SET_SERVO SERVO=klicky_servo ANGLE={ANGLE}
#     G4 P250
#     SET_SERVO SERVO=klicky_servo WIDTH=0.0

############################################################
                  # heated bed
############################################################

[heater_bed]
heater_pin: PB2 #HB
sensor_type: EPCOS 100K B57560G104F #Generic 3950
sensor_pin: PA3 #TB
#control: pid
# pid_Kp: 54.027
# pid_Ki: 0.770
# pid_Kd: 948.182
max_power: 0.8
min_temp: 0
max_temp: 130

##########################################################
#                Fan Control
##########################################################
# [Multi_pin Cooling_Fan]
# pin:

[fan]
pin: EBB:gpio14                                              #EBBCan:gpio13

[heater_fan hotend_fan]
pin: EBB:gpio4                                               #EBBCan:gpio14
max_power: 1.0
fan_speed: 1
kick_start_time: 0
heater: extruder
heater_temp: 50.0

# [controller_fan controller_fan]
# pin: PB14
# max_power: 0.5
# shutdown_speed: 0
# cycle_time: 0.010
# hardware_pwm: False
# kick_start_time: 0.100
# off_below: 0.0                                                        
# idle_speed: 1.0
# heater: extruder
# stepper: stepper_x, stepper_y, stepper_z

[temperature_fan controller_fan]
pin: PB14
kick_start_time: 0.5
max_power: 1.0
min_temp: 0
max_temp: 80
hardware_pwm: true
target_temp: 40
sensor_type: temperature_host
max_speed: 1.0
min_speed: 0.1
control: pid
pid_Kp: 2.0     ;40
pid_Ki: 5.0     ;0.2
pid_Kd: 0.5     ;0.1
pid_deriv_time: 2.0

# [temperature_fan controller_fan]
# sensor_type: temperature_host #This is what the Pi3's Temperature sensor is known as.
# pin: PB14                      #Set this to your fan pin
# max_temp: 80.0                #Set below 85C, Pi3+ MCU can be damaged at 85C
# target_temp: 40.0             #Set this to your preferred running temperature
# min_temp: 0
# shutdown_speed: 0.0
# kick_start_time: 0.5
# off_below: 0.19
# max_speed: 0.8
# min_speed: 0.0
# control: watermark
# # pid_Kp: 2.0
# # pid_Ki: 5.0
# # pid_Kd: 0.5
# # pid_deriv_time: 2.0

#################################################
#                 Nevermore
#################################################

## Slicer integration: Add "SET_FAN_SPEED FAN=Nevermore SPEED=1" in your start-macro
## (or less fan depending on your needs, like SPEED=0.8)
## in your end print code, add "UPDATE_DELAYED_GCODE ID=filter_off DURATION=180"
## this keeps your Nevermore running for 180s after the print finishes to clean the chamber a bit more.

[fan_generic Nevermore]
## Nevermore - FAN5 on Octopus
## Adjust if you use a different board or a different terminal.
pin: PB15

[delayed_gcode filter_off]
gcode:
    SET_FAN_SPEED FAN=Nevermore SPEED=0

[gcode_macro TOGGLE_NEVERMORE]
gcode:
    {% if printer['fan_generic Nevermore'].speed > 0 %}
      SET_FAN_SPEED FAN=Nevermore SPEED=0
    {% else %}
      SET_FAN_SPEED FAN=Nevermore SPEED=1
    {% endif %}    

# [heater_fan exhaust_fan]
# pin: PB15
# heater: extruder
# heater_temp: 180
# fan_speed: 0.1    
    

#####################################################################
#   Homing and Bed Mesh
#####################################################################

# [homing_override]
# axes: z
# set_position_z: 0
# gcode:
#     status_homing
#     G0 Z10 F500
#     G90
#     G28.1 Y0 X0
#     G0  X161 F9000
#     Deploy_Klicky_Dock
#     Retract_Klicky_Dock
#     G0 X110 Y100 F9000
#     G28.1 Z0
#     G0 Z20 F500
#     G90
#     G0 X161 F9000
#     Deploy_Klicky_Dock
#     G0 X110 F9000
#     Retract_Klicky_Dock
#     G90
#     status_ready
    
# [bed_mesh]
# speed: 150
# horizontal_move_z: 10
# mesh_min: 5,20.0
# mesh_max: 210.0,220
# probe_count: 5,5
# mesh_pps: 4,4
# algorithm: bicubic
# bicubic_tension: 0.2
# adaptive_margin: 5
# fade_start: 1
# fade_end: 10
# fade_target: 0
# zero_reference_position: 110.50,117.50

# [bed_mesh]
# speed: 150
# horizontal_move_z: 10
# mesh_min: 25,35.0
# mesh_max: 210.0,220
# probe_count: 5,5
# mesh_pps: 4,4
# algorithm: bicubic
# fade_start: 1
# fade_end: 10
# fade_target: 0
# zero_reference_position: 110.50,117.50


#####################################################################
#   Case Lights
#####################################################################

[output_pin Caselights]
pin: PA8
value: 1
shutdown_value: 0

#######################################################
#          Screw Tilt Adjust
#######################################################

[screws_tilt_adjust]
# screw1: 28.50, 15.50
# screw1_name: front left screw
# screw2: 198.50,15.50
# screw2_name: front right screw
# screw3: 198.50,186.50
# screw3_name: rear right screw
# screw4: 28.50,186.50
# screw4_name: rear left screw
# horizontal_move_z: 10.
# speed: 60.
# screw_thread: CW-M4

screw1: 28.50,186.50
screw1_name: rear left screw
screw2: 28.50,15.50
screw2_name: front left screw
screw3: 198.50,15.50
screw3_name: front right screw
screw4: 198.50,186.50
screw4_name: rear right screw
horizontal_move_z: 10.
speed: 60.
screw_thread: CW-M4


#############################################################
                  # Bed Screws
#############################################################

[bed_screws]
screw1: 30.5, 37
screw2: 30.5, 207
screw3: 204.5, 207
screw4: 204.5, 37

######################################################
             # bed mesh
######################################################

# [bed_mesh]
# speed: 120
# horizontal_move_z: 10
# mesh_min: 20,25
# mesh_max: 205,215
# probe_count: 5,5
# mesh_pps: 4,4
# algorithm: bicubic
# fade_start: 1
# fade_end: 10
# fade_target: 0
# zero_reference_position: 110.50,117.50 



######################################################
              # homming
#######################################################

# [safe_z_home]
# home_xy_position: 110.50,117.50 # Change coordinates to the center of your print bed
# z_hop: 10                 # Move up 10mm
# # z_hop_speed: 10



#############################################################
                   # Out pins
#############################################################

# [neopixel neopixel]
# pin: PC7
# chain_count: 13
# color_order: GRB
# initial_RED: 1.0
# initial_GREEN: 1.0
# initial_BLUE: 1.0
# #value: 0



# [neopixel underglow]
# pin: PA4
# chain_count: 1
# color_order: GRB
# initial_RED: 1.0
# initial_GREEN: 1.0
# initial_BLUE: 1.0
# initial_WHITE: 1.0

#[output_pin PS_ON]
#pin: PA9

#[output_pin pb9_pin]
#pin: PB9

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC1, EXP1_3=PC3, EXP1_5=PC0, EXP1_7=PA2, EXP1_9=<GND>,
    EXP1_2=PC2,  EXP1_4=<RST>, EXP1_6=PA0, EXP1_8=PA1, EXP1_10=<5V>

#######################################################
            # CRTouch Probe Configuration 
#######################################################

# [bltouch]

# sensor_pin: ^EBBCan:gpio24
# control_pin: EBBCan:gpio22
# x_offset: 0
# y_offset: 22
# speed: 5
# samples: 3
# sample_retract_dist: 5
# samples_tolerance_retries: 3                                     #z_offset: 0 # Must be 0 or conflicts with `#*# z_offset` in the auto-generated section at the bottom of this file. See https://www.youtube.com/watch?v=vduYl9Rw5iI
# probe_with_touch_mode: True                                      #stow_on_each_sample: False
# stow_on_each_sample: False
# #z_offset: 0
                                      

#######################################################
                   # probe
#######################################################

# [probe]
# pin: ^EBBCan:gpio6
# x_offset: 0.0
# y_offset: 19.75
# x_offset: 0
# y_offset: -22
# speed: 8
# samples: 2
# sample_retract_dist: 6.0
# samples_result:  median
# samples_tolerance: 0.100
# samples_tolerance_retries: 3
# #z_offset: 0.0                              #1.635

#############################################################
                      # Display
#############################################################

# [display]
# lcd_type: st7920
# cs_pin: EXP1_7
# sclk_pin: EXP1_6
# sid_pin: EXP1_8
# encoder_pins: ^EXP1_5, ^EXP1_3
# click_pin: ^!EXP1_2

# ################################################################
#                # filament sensor
# ################################################################

# [filament_motion_sensor SFS_T0]
# detection_length: 15.00 ; This can be adjusted to your desired level of sensitivity. 10 is a recomended value to prevent flow dropoff false triggers.
# extruder: extruder
# switch_pin: ^PC5
# pause_on_runout: true ; This can be set to false to debug false positives putting the sensor in "monitor mode". The printer will not pause but it will run the runout_gcode below. 
# event_delay: 3.0
# pause_delay: 0.5
# runout_gcode: M117 Runout Detected!

[output_pin beeper]
pin: EXP1_1

[include moonraker_obico_macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# pid_kp = 47.583
#*# pid_ki = 4.230
#*# pid_kd = 133.827
#*# control = pid
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.716418, 0.633626, 0.544251, 0.509084, 0.522238, 0.572197, 0.602991, 0.662054, 0.728086
#*# 	  0.641835, 0.526303, 0.441228, 0.406831, 0.399295, 0.436196, 0.463930, 0.545558, 0.625841
#*# 	  0.560169, 0.451155, 0.376443, 0.340895, 0.348345, 0.384069, 0.419946, 0.494187, 0.567763
#*# 	  0.567467, 0.465009, 0.376227, 0.336097, 0.328263, 0.352953, 0.398176, 0.472187, 0.555547
#*# 	  0.585755, 0.466972, 0.380528, 0.387562, 0.395338, 0.419135, 0.458868, 0.538865, 0.605691
#*# 	  0.624033, 0.505326, 0.413114, 0.406515, 0.385831, 0.431176, 0.432198, 0.506140, 0.588232
#*# 	  0.655692, 0.514319, 0.419159, 0.373208, 0.368950, 0.397370, 0.438871, 0.514610, 0.598122
#*# 	  0.714041, 0.566491, 0.457696, 0.411043, 0.407376, 0.451161, 0.496703, 0.595603, 0.684184
#*# 	  0.793374, 0.622271, 0.530028, 0.496056, 0.519636, 0.563478, 0.623127, 0.707404, 0.803205
#*# x_count = 9
#*# y_count = 9
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 209.96
#*# min_y = 25.0
#*# max_y = 219.96000000000004
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 43.4
#*# shaper_type_y = mzv
#*# shaper_freq_y = 34.2
#*#
#*# [extruder]
#*#
#*# [probe_eddy_current btt_eddy]
#*# reg_drive_current = 16
#*# calibrate =
#*# 	0.050000:3244539.120,0.090625:3243549.787,0.131250:3242408.965,
#*# 	0.168750:3241411.412,0.209375:3240439.119,0.250000:3239565.702,
#*# 	0.290625:3238655.072,0.331250:3237637.501,0.368750:3236742.692,
#*# 	0.409375:3235925.196,0.450000:3235127.881,0.490625:3234303.848,
#*# 	0.531250:3233327.791,0.568750:3232457.598,0.609375:3231654.592,
#*# 	0.650000:3230919.666,0.690625:3230127.128,0.731250:3229283.551,
#*# 	0.768750:3228535.622,0.809375:3227849.920,0.850000:3227214.580,
#*# 	0.890625:3226480.186,0.931250:3225709.469,0.968750:3225034.538,
#*# 	1.009375:3224386.171,1.050000:3223775.402,1.090625:3223127.343,
#*# 	1.131250:3222443.636,1.168750:3221846.143,1.209375:3221253.168,
#*# 	1.250000:3220685.005,1.290625:3220098.006,1.331250:3219442.824,
#*# 	1.368750:3218837.695,1.409375:3218272.893,1.450000:3217761.952,
#*# 	1.490625:3217241.511,1.531250:3216677.474,1.568750:3216140.302,
#*# 	1.609375:3215641.989,1.650000:3215188.930,1.690625:3214711.972,
#*# 	1.731250:3214178.513,1.768750:3213663.587,1.809375:3213179.031,
#*# 	1.850000:3212789.282,1.890625:3212361.473,1.931250:3211876.912,
#*# 	1.968750:3211427.078,2.009375:3211052.692,2.050000:3210655.974,
#*# 	2.090625:3210252.071,2.131250:3209803.732,2.168750:3209324.151,
#*# 	2.209375:3208968.671,2.250000:3208592.465,2.290625:3208231.643,
#*# 	2.331250:3207808.828,2.368750:3207444.066,2.409375:3207086.842,
#*# 	2.450000:3206760.680,2.490625:3206426.792,2.531250:3206031.449,
#*# 	2.568750:3205664.454,2.609375:3205350.468,2.650000:3205048.827,
#*# 	2.690625:3204744.333,2.731250:3204396.486,2.768750:3204058.254,
#*# 	2.809375:3203758.128,2.850000:3203519.541,2.890625:3203212.584,
#*# 	2.931250:3202847.110,2.968750:3202550.191,3.009375:3202272.795,
#*# 	3.050000:3201996.986,3.090625:3201727.031,3.131250:3201446.133,
#*# 	3.168750:3201163.589,3.209375:3200900.813,3.250000:3200683.325,
#*# 	3.290625:3200427.110,3.331250:3200157.795,3.368750:3199865.171,
#*# 	3.409375:3199610.789,3.450000:3199408.481,3.490625:3199180.560,
#*# 	3.531250:3198930.765,3.568750:3198704.204,3.609375:3198501.472,
#*# 	3.650000:3198319.091,3.690625:3198104.866,3.731250:3197854.249,
#*# 	3.768750:3197642.194,3.809375:3197431.672,3.850000:3197251.253,
#*# 	3.890625:3197061.274,3.931250:3196837.623,3.968750:3196646.032,
#*# 	4.009375:3196464.306,4.050000:3196296.365
#*#
#*# [temperature_probe btt_eddy]
#*# calibration_temp = 31.788368
#*# drift_calibration =
#*# 	3277263.717143, -1441.572428, 13.178851
#*# 	3260941.071272, -1222.248468, 10.956332
#*# 	3247839.698544, -1032.664319, 9.003587
#*# 	3235734.541105, -816.742540, 6.870477
#*# 	3224842.652028, -589.604216, 4.624676
#*# 	3217072.262537, -452.561785, 3.305222
#*# 	3211119.131338, -356.917653, 2.384652
#*# 	3205852.366923, -264.336275, 1.516065
#*# 	3201468.066192, -183.215540, 0.741279
#*# drift_calibration_min_temp = 31.771988611198978
